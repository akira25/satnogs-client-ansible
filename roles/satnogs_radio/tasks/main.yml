---
- name: Remove jessie backports repository
  ansible.builtin.apt_repository:
    repo: 'deb http://ftp.debian.org/debian jessie-backports main'
    state: 'absent'
  become: true
- name: Add LimeSDR udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/64-limesuite.rules
    dest: /etc/udev/rules.d/64-limesuite.rules
    mode: 0644
  become: true
  notify:
    - Retrigger udev devices
- name: Pin packages
  ansible.builtin.template:
    src: 'etc/apt/preferences.d/satnogs.j2'
    dest: '/etc/apt/preferences.d/satnogs'
    mode: 0644
  become: true
  tags:
    - satnogs_radio_software
- name: Install or remove system packages
  ansible.builtin.apt:
    name: '{{ item.name }}'
    state: '{{ item.state | default(omit) }}'
  become: true
  register: res
  until: res is success
  retries: '{{ package_retries }}'
  delay: '{{ package_delay }}'
  with_items: '{{ satnogs_radio_packages }}'
- name: Get package facts
  ansible.builtin.package_facts:
- name: Uninstall broken SatNOGS Flowgraphs dependencies
  ansible.builtin.apt:
    name:
      - libgnuradio-soapy
      - gr-soapy
      - libgnuradio-satnogs
      - gr-satnogs
    state: 'absent'
  when: '"satnogs-flowgraphs" not in ansible_facts.packages'
  become: true
- name: Install SatNOGS Flowgraphs
  ansible.builtin.apt:
    name: 'satnogs-flowgraphs{{ "" if experimental else "=" ~ satnogs_radio_flowgraphs_version }}'
    state: '{{ "latest" if experimental else "present" }}'
  become: true
  register: res
  until: res is success
  retries: '{{ package_retries }}'
  delay: '{{ package_delay }}'
  tags:
    - satnogs_radio_software
- name: Blacklist SDR modules
  ansible.builtin.kernel_blacklist:
    name: '{{ item }}'
    state: 'present'
  become: true
  with_items: '{{ satnogs_radio_blacklist_modules }}'
- name: Check if list of kernel builtin modules exists
  ansible.builtin.stat:
    path: '/lib/modules/{{ ansible_kernel }}/modules.builtin'
  register: modules_builtin
- name: Unload SDR modules
  ansible.builtin.modprobe:
    name: '{{ item }}'
    state: 'absent'
  become: true
  with_items: '{{ satnogs_radio_blacklist_modules }}'
  when: modules_builtin.stat.exists
- name: Download UHD images
  ansible.builtin.command: '/usr/bin/uhd_images_downloader'
  args:
    creates: '/usr/share/uhd/images/inventory.json'
  become: true
