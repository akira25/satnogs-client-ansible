---
- name: Add Airspy udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/52-airspy.rules
    dest: /etc/udev/rules.d/52-airspy.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add Airspy HF+ udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/52-airspyhf.rules
    dest: /etc/udev/rules.d/52-airspyhf.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add M2k udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/53-adi-m2k-usb.rules
    dest: /etc/udev/rules.d/53-adi-m2k-usb.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add PlutoSDR udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/53-adi-plutosdr-usb.rules
    dest: /etc/udev/rules.d/53-adi-plutosdr-usb.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add HackRF udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/53-hackrf.rules
    dest: /etc/udev/rules.d/53-hackrf.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add UHD udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/60-uhd-host.rules
    dest: /etc/udev/rules.d/60-uhd-host.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add LimeSDR udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/64-limesuite.rules
    dest: /etc/udev/rules.d/64-limesuite.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Add RTL-SDR udev rules
  ansible.builtin.copy:
    src: etc/udev/rules.d/rtl-sdr.rules
    dest: /etc/udev/rules.d/rtl-sdr.rules
    mode: '644'
  become: true
  notify:
    - Retrigger udev devices
- name: Blacklist SDR modules
  community.general.kernel_blacklist:
    name: '{{ item }}'
    state: 'present'
  become: true
  with_items: '{{ satnogs_radio_blacklist_modules }}'
- name: Check if list of kernel builtin modules exists
  ansible.builtin.stat:
    path: '/lib/modules/{{ ansible_kernel }}/modules.builtin'
  register: modules_builtin
- name: Unload SDR modules
  community.general.modprobe:
    name: '{{ item }}'
    state: 'absent'
  become: true
  with_items: '{{ satnogs_radio_blacklist_modules }}'
  when: modules_builtin.stat.exists
